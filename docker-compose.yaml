version: '3.3'
services:
  zookeeper:
    container_name: zookeeper
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
  kafka:
    container_name: kafka
    image: wurstmeister/kafka
    ports:
      - "9092:9092"
    environment:
      #https://kafka.js.org/docs/running-kafka-in-development
      #KAFKA_ADVERTISED_HOST_NAME: localhost
      #KAFKA_ADVERTISED_HOST_NAME: PLAINTEXT://kafka:9092
      #KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      #KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      #KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_INTERNAL
      #KAFKA_ADVERTISED_HOSTNAME: kafka
      KAFKA_LISTENERS: PLAINTEXT://:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "email:1:1"
      #KAFKA_CREATE_TOPICS: "topic-test:1:1"
    volumes:
      - /kafka:/var/run/docker.sock
    depends_on:
      - zookeeper
  dotnet_app:
    build: ./ProjetConcoursAspCore
    ports:
        - "80:80"
    depends_on:
        - kafka
    volumes:
        - './aspdotnetvol:/app/out'
  email_service:
    build: ./EmailService
    ports:
        - "8001:3000"
    depends_on:
        - kafka
  service_consumer:
    build: ./EmailServiceConsumer
    depends_on:
        - kafka
        - email_service